<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Plan on hackftz</title><link>https://hackftz.github.io/categories/plan/</link><description>Recent content in Plan on hackftz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Apr 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://hackftz.github.io/categories/plan/index.xml" rel="self" type="application/rss+xml"/><item><title>Plan 2020,Oct</title><link>https://hackftz.github.io/post/2012/04/23/hacker-with-horn/</link><pubDate>Mon, 23 Apr 2012 00:00:00 +0000</pubDate><guid>https://hackftz.github.io/post/2012/04/23/hacker-with-horn/</guid><description> 深入理解ts语法、用法、源码分析（暂时不用） 深入理解react 近版本迭代区别以及为何、语法、用法、源码分析 每天阅读至少三篇技术博客 阅读完在这里进行打卡record 打卡 2020-10-13
离10月14号还有45分钟的时候 我开始写下了这篇当日计划
今天熟悉了下ts的泛型、枚举、类型推断部分。
其他：
ES6中新添加的Array.prototype.fill 为什么框架很容易就走上大而全的不归之路？ 自定义元素 – 在 HTML 中定义新元素 10月14号 0:39分 网抑云ending
2020-10-14
类继承已经过时了——《设计模式：可复用面向对象软件的基础》downloaded 谈谈 jQuery 中的防冲突（noConflict）机制——avalonjs源码分析ing 通俗易懂了解Vue中nextTick的内部实现原理 前端异步解决方案——mmDeferred
avalonjs中avalon.nexttick处理（setImmediate、MutationObserver、postMessage）avalon中在event事件中使用了window.postMessage来监听。
vue中则是使用了MessageChannel(MessageChannel基本上是一个双向通信管道.可以把它想象成window.postMessage。window.onmessage的替代品 – 但是更简单,更易于配置.) js 宏任务和微任务——这里只做了定义，也没说怎么实现这个区分。 【Vue原理】NextTick - 源码版 之 宏微任务的抉择——withMacroTask的使用，通过事件注册节点来区分宏和微。</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on hackftz</title><link>https://hackftz.github.io/categories/javascript/</link><description>Recent content in JavaScript on hackftz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://hackftz.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>如何实现一个FormData</title><link>https://hackftz.github.io/post/2020/10/26/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAformdata/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate><guid>https://hackftz.github.io/post/2020/10/26/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAformdata/</guid><description>一、前言 最近项目中遇到一个问题，我们需要在cocos项目里去上传音频文件，而cocos原生环境和平时我们开发所在的浏览器环境和Node环境有很多差异，而cocos环境只提供了基础类，没有提供FormData这种封装类。
所以问题来了？如何实现一个FormData，以及怎么去使用它？
二、浏览器中的FormData 这里我列一个最简单的例子，我们来看看FormData到底是什么。 \
function App() { const [name, setName] = useState(&amp;#39;&amp;#39;) const [age, setAge] = useState(0) const [file, setFile] = useState&amp;lt;File | null&amp;gt;() const submit = () =&amp;gt; { console.log(name, age); console.log(file); var fd = new FormData() fd.append(&amp;#39;name&amp;#39;, name) fd.append(&amp;#39;age&amp;#39;, age.toString()) fd.append(&amp;#39;file&amp;#39;, file as Blob) $.ajax({ type: &amp;#34;POST&amp;#34;, url: &amp;#34;www.happy.com&amp;#34;, data: fd, processData: false,//重要 contentType: &amp;#39;multipart/form-data&amp;#39;,//重要 success: function (data: any) { } }) } return ( &amp;lt;div className=&amp;#34;App&amp;#34;&amp;gt; &amp;lt;form action=&amp;#34;form_action.</description></item></channel></rss>